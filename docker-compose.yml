version: '3'
services:
  backend:
    container_name: backend
    platform: linux/amd64
    build:
      context: .
      dockerfile: ./apps/backend/Dockerfile
    ports:
      - 8001:8001
    networks:
      - app_network
    volumes:
      - ./apps/backend:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      PORT: ${BACKEND_PORT}
      DATABASE_URL: ${DATABASE_URL}
      SHOPIFY_CLIENT_ID: ${SHOPIFY_CLIENT_ID}
      SHOPIFY_SECRET_KEY: ${SHOPIFY_SECRET_KEY}
      AUTH_0_CLIENT_ID: ${AUTH_0_CLIENT_ID}
      AUTH_0_CLIENT_SECRET: ${AUTH_0_CLIENT_SECRET}
      AUTH_0_DOMAIN: ${AUTH_0_DOMAIN}
      BASE_URL: ${BASE_URL}
      FRONT_END_URL: ${FRONT_END_URL}
    depends_on:
      - db
  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_DATABASE: example_db
      MYSQL_USER: example_user
      MYSQL_PASSWORD: example_password
    ports:
      - "3306:3306"
    volumes:
      - mysql:/var/lib/mysql
    networks:
      - app_network
  # merchant-ui:
  #   container_name: merchant-ui
  #   platform: linux/amd64
  #   build:
  #     context: .
  #     dockerfile: ./apps/merchant-ui/Dockerfile
  #   ports:
  #     - 3000:3000
  #   networks:
  #     - app_network
  #   volumes:
  #     - ./apps/merchant-ui:/usr/src/app
  #     - /usr/src/app/node_modules
  #   environment:
  #     - PORT=3000
networks:
  app_network:
    external: true
volumes:
  mysql: ~