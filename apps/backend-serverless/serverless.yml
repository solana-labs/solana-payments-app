service: backend-serverless
frameworkVersion: '3'
useDotenv: true
provider:
  name: aws
  runtime: nodejs18.x
  environment:
    SHOPIFY_SECRET_KEY: ${env:SHOPIFY_SECRET_KEY}
    SHOPIFY_CLIENT_ID: ${env:SHOPIFY_CLIENT_ID}
    BASE_URL: ${env:BASE_URL}
    MERCHANT_UI_URL: ${env:MERCHANT_UI_URL}
    DATABASE_URL: ${env:DATABASE_URL}
    PAYMENT_UI_URL: ${env:PAYMENT_UI_URL}
    TRANSACTION_REQUEST_SERVER_URL: ${env:TRANSACTION_REQUEST_SERVER_URL}
    TRM_API_KEY: ${env:TRM_API_KEY}
    JWT_SECRET_KEY: ${env:JWT_SECRET_KEY}
    USE_AUTH_MOCK: ${env:USE_AUTH_MOCK}
  httpApi:
    cors: true
package:
  excludeDevDependencies: true
  patterns:
    - 'node_modules/.prisma/**'
functions:
  install:
    handler: src/handlers/shopify-handlers/install.install
    events:
      - httpApi:
          path: /install
          method: get
  redirect:
    handler: src/handlers/shopify-handlers/redirect.redirect
    events:
      - httpApi:
          path: /redirect
          method: get
  payment:
    handler: src/handlers/shopify-handlers/payment.payment
    events:
      - httpApi:
          path: /payment
          method: post
  refund:
    handler: src/handlers/shopify-handlers/refund.refund
    events:
      - httpApi:
          path: /refund
          method: post
  # screen-wallet:
  #   handler: src/handlers/screen-wallet.screenWallet
  #   events:
  #     - httpApi:
  #         path: /screen-wallet
  #         method: get
  helius:
    handler: src/handlers/webhooks/helius.helius
    events:
      - httpApi:
          path: /helius
          method: post
  cron:
    handler: src/handlers/webhooks/cron.cron
    events:
      - httpApi:
          path: /cron
          method: get
  payment-transaction:
    handler: src/handlers/transactions/payment-transaction.paymentTransaction
    events:
      - httpApi:
          path: /payment-transaction
          method: post
  refund-transaction:
    handler: src/handlers/transactions/refund-transaction.refundTransaction
    events:
      - httpApi:
          path: /refund-transaction
          method: post
  reject-refund:
    handler: src/handlers/clients/merchant-ui/write-data/reject-refund.rejectRefund
    events:
      - httpApi:
          path: /reject-refund
          method: post
  payment-metadata:
    handler: src/handlers/transactions/payment-transaction.paymentMetadata
    events:
      - httpApi:
          path: /payment-transaction
          method: get
  payment-status:
    handler: src/handlers/clients/payment-ui/payment-status.paymentStatus
    events:
      - httpApi:
          path: /payment-status
          method: get
  merchant-data:
    handler: src/handlers/clients/merchant-ui/read-data/merchant-data.merchantData
    events:
      - httpApi:
          path: /merchant-data
          method: get
  refund-data:
    handler: src/handlers/clients/merchant-ui/read-data/refund-data.refundData
    events:
      - httpApi:
          path: /refund-data
          method: get
  refund-status:
    handler: src/handlers/clients/merchant-ui/read-data/refund-status.refundStatus
    events:
      - httpApi:
          path: /refund-status
          method: get
  payment-data:
    handler: src/handlers/clients/merchant-ui/read-data/payment-data.paymentData
    events:
      - httpApi:
          path: /payment-data
          method: get
  # login:
  #   handler: src/handlers/testing/login.login
  #   events:
  #     - httpApi:
  #         path: /login
  #         method: get
  update-merchant:
    handler: src/handlers/clients/merchant-ui/write-data/update-merchant.updateMerchant
    events:
      - httpApi:
          path: /update-merchant
          method: put
plugins:
  - serverless-plugin-typescript
  - serverless-plugin-common-excludes # this should go before serverless-plugin-include-dependencies
  - serverless-plugin-include-dependencies
  - serverless-prune-plugin
