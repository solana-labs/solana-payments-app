generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Merchant {
  id                         String    @id
  shop                       String    @unique
  name                       String?
  email                      String?
  accessToken                String?
  scopes                     String?
  lastNonce                  String
  paymentAddress             String?
  kybInquiry                 String?
  kybState                   KybState?
  acceptedTermsAndConditions Boolean   @default(false)
  dismissCompleted           Boolean   @default(false)
}

model PaymentRecord {
  id                   String                        @id
  status               PaymentRecordStatus
  shopId               String                        @unique
  shopGid              String?
  shopGroup            String
  test                 Boolean
  amount               Float
  currency             String
  usdcAmount           Float
  cancelURL            String
  merchantId           String
  transactionSignature String?
  redirectUrl          String?
  requestedAt          DateTime                      @default(now())
  completedAt          DateTime?
  rejectionReason      PaymentRecordRejectionReason?
}

model RefundRecord {
  id                   String             @id
  status               RefundRecordStatus
  amount               Float
  currency             String
  usdcAmount           Float
  shopId               String
  shopGid              String
  shopPaymentId        String
  test                 Boolean
  merchantId           String
  transactionSignature String?
  requestedAt          DateTime           @default(now())
  completedAt          DateTime?
}

model TransactionRecord {
  id              Int             @id @default(autoincrement())
  signature       String
  type            TransactionType
  paymentRecordId String?
  refundRecordId  String?
  createdAt       DateTime        @default(now())
}

model GDPR {
  id         Int     @id @default(autoincrement())
  merchantId String
  completed  Boolean
}

enum TransactionType {
  payment
  refund
}

enum PaymentRecordStatus {
  pending
  paid
  completed
  rejected
}

enum PaymentRecordRejectionReason {
  dependencySafetyReason
  customerSafetyReason
  internalServerReason
  unknownReason
}

enum RefundRecordStatus {
  pending
  paid
  completed
  rejected
}

enum KybState {
  pending
  failed
  finished
}
